// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Solvace.TechCase.Repository.Contexts;

#nullable disable

namespace Solvace.TechCase.Repository.Migrations
{
    [DbContext(typeof(DefaultContext))]
    [Migration("20241211004200_AddColuna")]
    partial class AddColuna
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 620, 621
            modelBuilder.HasAnnotation("ProductVersion", "8.0.4");

            modelBuilder.Entity("Solvace.TechCase.Domain.Entities.ActionPlan.ActionPlan", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("ActionPlanStatusId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(4000)
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset?>("EndedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("ExternalId")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "id");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("TypeName")
                       .IsRequired()
                       .HasMaxLength(30)
                       .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ActionPlanStatusId");

                    b.ToTable("ActionPlans");
                });

            modelBuilder.Entity("Solvace.TechCase.Domain.Entities.ActionPlan.ActionPlanStatus", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("ExternalId")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "id");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ActionPlanStatus");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 11, 4, 13, 27, 24, 538, DateTimeKind.Unspecified).AddTicks(2160), new TimeSpan(0, 0, 0, 0, 0)),
                            ExternalId = "17b7b9ca-f00c-4567-8023-47e1c8f80971",
                            IsActive = true,
                            Name = "OPEN"
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 11, 4, 13, 27, 24, 538, DateTimeKind.Unspecified).AddTicks(2270), new TimeSpan(0, 0, 0, 0, 0)),
                            ExternalId = "ce5dd49b-85e9-40d0-87fa-e47327e382bf",
                            IsActive = true,
                            Name = "IN_PROGRESS"
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 11, 4, 13, 27, 24, 538, DateTimeKind.Unspecified).AddTicks(2310), new TimeSpan(0, 0, 0, 0, 0)),
                            ExternalId = "8203c033-f38c-4c94-9686-a5b0d27d98d0",
                            IsActive = true,
                            Name = "COMPLETED"
                        });
                });

            modelBuilder.Entity("Solvace.TechCase.Domain.Entities.ActionPlan.ActionPlan", b =>
                {
                    b.HasOne("Solvace.TechCase.Domain.Entities.ActionPlan.ActionPlanStatus", "ActionPlanStatus")
                        .WithMany()
                        .HasForeignKey("ActionPlanStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ActionPlanStatus");
                });
#pragma warning restore 620, 621
        }
    }
}
